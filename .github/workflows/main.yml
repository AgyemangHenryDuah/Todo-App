name: Build and Push to ECR
on:
  push:
    branches: [ "main" ]
env:
  AWS_REGION: eu-west-1
  ECR_PUBLIC_REGISTRY: public.ecr.aws/b8c4r0w8
  ECR_REPOSITORY: todo_repo
  IMAGE_TAG: henryagyemang_todo_app
  TASK_DEFINITION: todo-task

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon Public ECR
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

    - name: Build, tag, and push image
      id: build-image
      run: |
        docker build -t $ECR_PUBLIC_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_PUBLIC_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_PUBLIC_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Update task definition
      id: update-task-def
      run: |
        # Get current task definition
        TASK_DEF=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION --query taskDefinition)
        
        # Update image in task definition
        NEW_DEF=$(echo $TASK_DEF | jq --arg IMAGE "${{ steps.build-image.outputs.image }}" '.containerDefinitions[0].image = $IMAGE')
        
        # Remove unwanted fields
        NEW_DEF=$(echo $NEW_DEF | jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)')
        
        # Register new task definition
        aws ecs register-task-definition --cli-input-json "$NEW_DEF"
        
        # Get new revision
        NEW_REV=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION --query 'taskDefinition.revision' --output text)
        echo "task_def_arn=arn:aws:ecs:$AWS_REGION:${{ secrets.AWS_ACCOUNT_ID }}:task-definition/$TASK_DEFINITION:$NEW_REV" >> $GITHUB_OUTPUT