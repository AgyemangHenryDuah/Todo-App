name: Build, Push, and Deploy
on:
  push:
    branches: ["main"]
  pull_request:
    branches: [main]

env:
  AWS_REGION: eu-west-1
  ECR_PUBLIC_REGISTRY: public.ecr.aws/b8c4r0w8
  ECR_REPOSITORY: todo_repo
  IMAGE_TAG: ${{ github.sha }}  # Immutable tag
  ECS_CLUSTER: TodoECSCluster
  ECS_SERVICE: TodoECSService
  ECS_TASK_FAMILY: todo-task
  CONTAINER_DEFINITION: todo-container

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production
    concurrency: 
      group: production-deploy
      cancel-in-progress: true
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon Public ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build Docker image
        id: build-image
        run: |
          docker build --platform linux/amd64 -t $ECR_PUBLIC_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_PUBLIC_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_PUBLIC_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Get deployment group from CloudFormation
        id: get-deployment-group
        run: |
          DEPLOYMENT_GROUP=$(aws cloudformation describe-stacks \
            --stack-name Todo-Lab \
            --query 'Stacks[0].Outputs[?OutputKey==`CodeDeployGroupName`].OutputValue' \
            --output text \
            --region $AWS_REGION)
          echo "CODEDEPLOY_DEPLOYMENT_GROUP=$DEPLOYMENT_GROUP" >> $GITHUB_ENV

      - name: Generate task definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json  # Store this in your repo
          container-name: ${{ env.CONTAINER_DEFINITION }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          codedeploy-appspec: appspec.json  # Store this in your repo
          codedeploy-application: ${{ env.CODEDEPLOY_APPLICATION }}
          codedeploy-deployment-group: ${{ env.CODEDEPLOY_DEPLOYMENT_GROUP }}